/*------------------------------------*\
  $IMPORTS
\*------------------------------------*/
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

.inline {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }
  .inline > div {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1;
    margin-right: 20px; }
    .inline > div:last-child {
      margin-right: 0; }

.inline-fields {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }
  .inline-fields label {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1; }
  .inline-fields label {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 10%;
        -ms-flex: 0 0 10%;
            flex: 0 0 10%;
    padding-right: 20px; }
  .inline-fields span.error {
    left: 10%; }

.hint {
  font-size: 13px;
  color: #B4B4B4;
  display: block;
  margin-top: 2px; }

form fieldset {
  border: none;
  padding: 20px; }
  form fieldset.with-border {
    border: 1px solid #ccc; }
  form fieldset.valid {
    background: rgba(0, 255, 0, 0.2); }
  form fieldset.invalid {
    background: rgba(255, 0, 0, 0.1); }
  form fieldset > div {
    margin-top: 15px;
    position: relative; }
    form fieldset > div label.required:after {
      content: ' *';
      color: red; }
    form fieldset > div input, form fieldset > div select, form fieldset > div textarea {
      display: block;
      width: 100%;
      height: 35px;
      padding: 0 15px;
      border: 1px solid #ccc; }
    form fieldset > div textarea {
      height: 200px;
      resize: none; }
    form fieldset > div input[type="checkbox"], form fieldset > div input[type="radio"] {
      width: auto;
      display: inline;
      height: auto; }
    form fieldset > div span.error {
      color: red;
      font-size: 12px;
      position: absolute;
      top: 100%;
      left: 0; }
    form fieldset > div .error-msg {
      color: red;
      font-size: 12px; }
    form fieldset > div .unmask {
      position: absolute;
      outline: none;
      bottom: 24px;
      right: 0;
      font-size: 0;
      border: 1px solid #ccc;
      background: #fff;
      width: 35px;
      height: 35px; }
      form fieldset > div .unmask__on svg.unmask__off {
        display: none; }
      form fieldset > div .unmask__on svg.unmask__on {
        display: inline-block; }
      form fieldset > div .unmask__off svg.unmask__on {
        display: none; }
      form fieldset > div .unmask__off svg.unmask__off {
        display: inline-block; }
      form fieldset > div .unmask svg {
        fill: currentColor;
        width: 30px;
        height: 35px; }
    form fieldset > div input:not(:focus).error {
      background-color: #FFD9D9; }
    form fieldset > div input:not(:focus).valid {
      background-color: #D9FFD9; }

.errors {
  position: relative;
  padding: 10px;
  margin: 15px auto;
  display: none; }
  .errors span {
    display: block;
    color: red;
    margin-top: 6px; }

/*------------------------------------*\
  $LOGIN
\*------------------------------------*/
.form-example {
  padding: 20px; }
  .form-example fieldset {
    border: 1px solid #ccc; }

/*------------------------------------*\
  $FANCY SELECT
\*------------------------------------*/
.fancy-select {
  position: relative; }
  .fancy-select svg {
    margin-right: 5px;
    vertical-align: top;
    margin-top: 8px; }
  .fancy-select.disabled {
    opacity: .5; }
  .fancy-select .trigger, .fancy-select li {
    padding-left: .5em; }
  .fancy-select .trigger {
    cursor: pointer;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    position: relative;
    border: 1px solid #ccc;
    min-width: 200px;
    height: 35px;
    line-height: 34px; }
  .fancy-select .options {
    background: #fff;
    list-style: none;
    margin: 0;
    position: absolute;
    top: 100%;
    left: 0;
    visibility: hidden;
    opacity: 0;
    z-index: 50;
    max-height: 200px;
    overflow: auto;
    border: 1px solid #ccc;
    width: 100%; }
    .fancy-select .options li {
      cursor: pointer;
      white-space: nowrap;
      position: relative; }
      .fancy-select .options li.selected {
        background: rgba(43, 134, 134, 0.3);
        color: rgba(255, 255, 255, 0.75); }
      .fancy-select .options li.hover {
        color: cyan; }
    .fancy-select .options.open {
      visibility: visible;
      top: 100%;
      opacity: 1; }
    .fancy-select .options.overflowing {
      top: auto;
      bottom: 100%; }
      .fancy-select .options.overflowing.open {
        top: auto;
        bottom: 50px; }

.icon {
  background-image: url('../img/sprite.png'); }

@media (min--moz-device-pixel-ratio: 1.5), (-webkit-min-device-pixel-ratio: 1.5), (min-device-pixel-ratio: 1.5), (min-resolution: 1.5dppx) {
  .icon {
    background-image: url('../img/sprite@2x.png');
    background-size: 344px 189px; } }

/*------------------------------------*\
  $INCLUDE CUSTOM FONTS
\*------------------------------------*/
/*------------------------------------*\
  $COMMON SETTINGS
\*------------------------------------*/
/*  $RESET
  ------------------------------------ */
html * {
  margin: 0;
  padding: 0; }

fieldset {
  border: 0; }

img {
  vertical-align: middle; }

textarea {
  resize: vertical; }

a {
  text-decoration: none; }

ul {
  list-style: none; }

/*  $BOX SIZING
  ------------------------------------ */
html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/*  $FONT SMOOTH
  ------------------------------------ */
html, body, button {
  -moz-osx-font-smoothing: antialiased;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased; }

/*  $PERFORMANCE
  ------------------------------------ */
.disable-hover {
  pointer-events: none; }

/*------------------------------------*\
  $GRID SYSTEM
\*------------------------------------*/
.grid {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  /* Alignment per row */
  /* Base classes for all media */
  /* With gutters */ }
  .grid__cell {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1;
    /* Alignment per cell */ }
    .grid__cell--top {
      -webkit-align-self: flex-start;
          -ms-flex-item-align: start;
              align-self: flex-start; }
    .grid__cell--bottom {
      -webkit-align-self: flex-end;
          -ms-flex-item-align: end;
              align-self: flex-end; }
    .grid__cell--center {
      -webkit-align-self: center;
          -ms-flex-item-align: center;
              align-self: center; }
  .grid--top {
    -webkit-box-align: start;
    -webkit-align-items: flex-start;
        -ms-flex-align: start;
            align-items: flex-start; }
  .grid--bottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
        -ms-flex-align: end;
            align-items: flex-end; }
  .grid--center {
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center; }
  .grid--fit > .grid__cell {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
        -ms-flex: 1;
            flex: 1; }
  .grid--full > .grid__cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 100%;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%; }
  .grid--1of2 > .grid__cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 50%;
        -ms-flex: 0 0 50%;
            flex: 0 0 50%; }
  .grid--1of3 > .grid__cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 33.3333%;
        -ms-flex: 0 0 33.3333%;
            flex: 0 0 33.3333%; }
  .grid--1of4 > .grid__cell {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 25%;
        -ms-flex: 0 0 25%;
            flex: 0 0 25%; }
  .grid__gutters {
    margin-left: -20px; }
    .grid__gutters > .grid__cell {
      padding-left: 20px; }

/*------------------------------------*\
  $COLORS
\*------------------------------------*/
/*------------------------------------*\
  $MIXINS, $PLACEHOLDERS, $FUNCTIONS
\*------------------------------------*/
/*  $FUNCTIONS
  ------------------------------------ */
/*  $MIXINS
  ------------------------------------ */
/*  $PLACEHOLDERS
  ------------------------------------ */
/*------------------------------------*\
  $ICONS
\*------------------------------------*/
/*  $PNG SPRITE
  ------------------------------------ */
.icon {
  display: inline-block !important; }

/*  $SVG SPRITE
  ------------------------------------ */
svg {
  vertical-align: middle;
  display: inline-block;
  text-align: center;
  width: 16px;
  height: 16px; }

/*------------------------------------*\
  $TYPOGRAPHY
\*------------------------------------*/
html, body {
  font-size: 1rem;
  line-height: 1.5;
  font-family: "Arial", sans-serif;
  height: 100%;
  min-height: 100%;
  padding: 10px; }

h1, h2, h3, h4, h5, h6 {
  margin-top: 1rem;
  line-height: 1.1; }

h1 {
  text-align: center; }

h2.heading-container {
  margin-top: 100px;
  text-align: center; }

h3.heading-content {
  margin-top: 55px;
  text-align: center; }

/*------------------------------------*\
  $COMMON ELEMENTS
\*------------------------------------*/
/*  $BUTTONS
  ------------------------------------ */
.button {
  display: inline-block;
  background: none;
  border: none;
  text-decoration: none;
  outline: none;
  white-space: nowrap;
  height: 40px;
  line-height: 40px;
  padding: 0 40px;
  background: #ccc;
  color: #f00;
  margin-top: 15px;
  font-size: 1em; }
  .button:hover {
    background: #bfbfbf; }
  .button:active {
    background: #b3b3b3; }
  .button.radius {
    border-radius: 5px; }
  .button.round {
    border-radius: 50%; }
  .button.small {
    font-size: .75rem;
    padding: 0 20px;
    height: 30px;
    line-height: 30px; }
  .button.medium {
    font-size: 1.25rem; }
  .button.large {
    font-size: 1.5rem;
    padding: 0 50px;
    height: 50px;
    line-height: 50px; }


/*# sourceMappingURL=data:application/json;base64, */